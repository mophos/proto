// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: src/emr.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmrSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *EmrSearchRequest) Reset() {
	*x = EmrSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrSearchRequest) ProtoMessage() {}

func (x *EmrSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrSearchRequest.ProtoReflect.Descriptor instead.
func (*EmrSearchRequest) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{0}
}

func (x *EmrSearchRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type EmrRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hn       string `protobuf:"bytes,1,opt,name=hn,proto3" json:"hn,omitempty"`
	Hospcode string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
}

func (x *EmrRequest) Reset() {
	*x = EmrRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrRequest) ProtoMessage() {}

func (x *EmrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrRequest.ProtoReflect.Descriptor instead.
func (*EmrRequest) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{1}
}

func (x *EmrRequest) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrRequest) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

type EmrServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vn       string `protobuf:"bytes,1,opt,name=vn,proto3" json:"vn,omitempty"`
	Hn       string `protobuf:"bytes,2,opt,name=hn,proto3" json:"hn,omitempty"`
	Hospcode string `protobuf:"bytes,3,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
}

func (x *EmrServiceRequest) Reset() {
	*x = EmrServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrServiceRequest) ProtoMessage() {}

func (x *EmrServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrServiceRequest.ProtoReflect.Descriptor instead.
func (*EmrServiceRequest) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{2}
}

func (x *EmrServiceRequest) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrServiceRequest) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrServiceRequest) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

type EmrSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrSearchResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrSearchResponse) Reset() {
	*x = EmrSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrSearchResponse) ProtoMessage() {}

func (x *EmrSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrSearchResponse.ProtoReflect.Descriptor instead.
func (*EmrSearchResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{3}
}

func (x *EmrSearchResponse) GetResults() []*EmrSearchResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrOPDDrugResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrOPDDrugResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrOPDDrugResponse) Reset() {
	*x = EmrOPDDrugResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDDrugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDDrugResponse) ProtoMessage() {}

func (x *EmrOPDDrugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDDrugResponse.ProtoReflect.Descriptor instead.
func (*EmrOPDDrugResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{4}
}

func (x *EmrOPDDrugResponse) GetResults() []*EmrOPDDrugResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrOPDLabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrOPDLabResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrOPDLabResponse) Reset() {
	*x = EmrOPDLabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDLabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDLabResponse) ProtoMessage() {}

func (x *EmrOPDLabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDLabResponse.ProtoReflect.Descriptor instead.
func (*EmrOPDLabResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{5}
}

func (x *EmrOPDLabResponse) GetResults() []*EmrOPDLabResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrOPDDiagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrOPDDiagResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrOPDDiagResponse) Reset() {
	*x = EmrOPDDiagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDDiagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDDiagResponse) ProtoMessage() {}

func (x *EmrOPDDiagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDDiagResponse.ProtoReflect.Descriptor instead.
func (*EmrOPDDiagResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{6}
}

func (x *EmrOPDDiagResponse) GetResults() []*EmrOPDDiagResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrOPDProcedureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrOPDProcedureResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrOPDProcedureResponse) Reset() {
	*x = EmrOPDProcedureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDProcedureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDProcedureResponse) ProtoMessage() {}

func (x *EmrOPDProcedureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDProcedureResponse.ProtoReflect.Descriptor instead.
func (*EmrOPDProcedureResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{7}
}

func (x *EmrOPDProcedureResponse) GetResults() []*EmrOPDProcedureResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrOPDScreenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrOPDScreenResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrOPDScreenResponse) Reset() {
	*x = EmrOPDScreenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDScreenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDScreenResponse) ProtoMessage() {}

func (x *EmrOPDScreenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDScreenResponse.ProtoReflect.Descriptor instead.
func (*EmrOPDScreenResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{8}
}

func (x *EmrOPDScreenResponse) GetResults() []*EmrOPDScreenResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrServiceListResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrServiceListResponse) Reset() {
	*x = EmrServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrServiceListResponse) ProtoMessage() {}

func (x *EmrServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrServiceListResponse.ProtoReflect.Descriptor instead.
func (*EmrServiceListResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{9}
}

func (x *EmrServiceListResponse) GetResults() []*EmrServiceListResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrAppointmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrAppointmentResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrAppointmentResponse) Reset() {
	*x = EmrAppointmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrAppointmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrAppointmentResponse) ProtoMessage() {}

func (x *EmrAppointmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrAppointmentResponse.ProtoReflect.Descriptor instead.
func (*EmrAppointmentResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{10}
}

func (x *EmrAppointmentResponse) GetResults() []*EmrAppointmentResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrReferOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*EmrReferOutResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *EmrReferOutResponse) Reset() {
	*x = EmrReferOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrReferOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrReferOutResponse) ProtoMessage() {}

func (x *EmrReferOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrReferOutResponse.ProtoReflect.Descriptor instead.
func (*EmrReferOutResponse) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{11}
}

func (x *EmrReferOutResponse) GetResults() []*EmrReferOutResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type EmrSearchResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode     string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname     string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	TitleName    string `protobuf:"bytes,3,opt,name=title_name,json=titleName,proto3" json:"title_name,omitempty"`
	FirstName    string `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName     string `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Birthdate    string `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Sex          string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Cid          string `protobuf:"bytes,8,opt,name=cid,proto3" json:"cid,omitempty"`
	Hn           string `protobuf:"bytes,9,opt,name=hn,proto3" json:"hn,omitempty"`
	ContactTel   string `protobuf:"bytes,10,opt,name=contact_tel,json=contactTel,proto3" json:"contact_tel,omitempty"`
	ContactName  string `protobuf:"bytes,11,opt,name=contact_name,json=contactName,proto3" json:"contact_name,omitempty"`
	ProviderName string `protobuf:"bytes,12,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider  string `protobuf:"bytes,13,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid         string `protobuf:"bytes,14,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrSearchResponse_Results) Reset() {
	*x = EmrSearchResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrSearchResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrSearchResponse_Results) ProtoMessage() {}

func (x *EmrSearchResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrSearchResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrSearchResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EmrSearchResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetBirthdate() string {
	if x != nil {
		return x.Birthdate
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetContactTel() string {
	if x != nil {
		return x.ContactTel
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetContactName() string {
	if x != nil {
		return x.ContactName
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrSearchResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrOPDDrugResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode      string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname      string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn            string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn            string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	DrugCode      string `protobuf:"bytes,5,opt,name=drug_code,json=drugCode,proto3" json:"drug_code,omitempty"`
	DrugName      string `protobuf:"bytes,6,opt,name=drug_name,json=drugName,proto3" json:"drug_name,omitempty"`
	Qty           string `protobuf:"bytes,7,opt,name=qty,proto3" json:"qty,omitempty"`
	Usage1        string `protobuf:"bytes,8,opt,name=usage1,proto3" json:"usage1,omitempty"`
	Usage2        string `protobuf:"bytes,9,opt,name=usage2,proto3" json:"usage2,omitempty"`
	Usage3        string `protobuf:"bytes,10,opt,name=usage3,proto3" json:"usage3,omitempty"`
	DrugshortName string `protobuf:"bytes,11,opt,name=drugshort_name,json=drugshortName,proto3" json:"drugshort_name,omitempty"`
	ProviderName  string `protobuf:"bytes,12,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider   string `protobuf:"bytes,13,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid          string `protobuf:"bytes,14,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrOPDDrugResponse_Results) Reset() {
	*x = EmrOPDDrugResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDDrugResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDDrugResponse_Results) ProtoMessage() {}

func (x *EmrOPDDrugResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDDrugResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrOPDDrugResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{4, 0}
}

func (x *EmrOPDDrugResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetDrugCode() string {
	if x != nil {
		return x.DrugCode
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetDrugName() string {
	if x != nil {
		return x.DrugName
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetUsage1() string {
	if x != nil {
		return x.Usage1
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetUsage2() string {
	if x != nil {
		return x.Usage2
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetUsage3() string {
	if x != nil {
		return x.Usage3
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetDrugshortName() string {
	if x != nil {
		return x.DrugshortName
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrOPDDrugResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrOPDLabResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode       string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname       string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn             string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn             string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	LabOrderNumber string `protobuf:"bytes,5,opt,name=lab_order_number,json=labOrderNumber,proto3" json:"lab_order_number,omitempty"`
	LabGroupName   string `protobuf:"bytes,6,opt,name=lab_group_name,json=labGroupName,proto3" json:"lab_group_name,omitempty"`
	LabName        string `protobuf:"bytes,7,opt,name=lab_name,json=labName,proto3" json:"lab_name,omitempty"`
	LabResult      string `protobuf:"bytes,8,opt,name=lab_result,json=labResult,proto3" json:"lab_result,omitempty"`
	NormalValue    string `protobuf:"bytes,9,opt,name=normal_value,json=normalValue,proto3" json:"normal_value,omitempty"`
	ProviderName   string `protobuf:"bytes,10,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider    string `protobuf:"bytes,11,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid           string `protobuf:"bytes,12,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrOPDLabResponse_Results) Reset() {
	*x = EmrOPDLabResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDLabResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDLabResponse_Results) ProtoMessage() {}

func (x *EmrOPDLabResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDLabResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrOPDLabResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{5, 0}
}

func (x *EmrOPDLabResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetLabOrderNumber() string {
	if x != nil {
		return x.LabOrderNumber
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetLabGroupName() string {
	if x != nil {
		return x.LabGroupName
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetLabName() string {
	if x != nil {
		return x.LabName
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetLabResult() string {
	if x != nil {
		return x.LabResult
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetNormalValue() string {
	if x != nil {
		return x.NormalValue
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrOPDLabResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrOPDDiagResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode        string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname        string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn              string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn              string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	DiagnosisCode   string `protobuf:"bytes,5,opt,name=diagnosis_code,json=diagnosisCode,proto3" json:"diagnosis_code,omitempty"`
	DiagnosisEnName string `protobuf:"bytes,6,opt,name=diagnosis_en_name,json=diagnosisEnName,proto3" json:"diagnosis_en_name,omitempty"`
	DiagnosisThName string `protobuf:"bytes,7,opt,name=diagnosis_th_name,json=diagnosisThName,proto3" json:"diagnosis_th_name,omitempty"`
	DiagnosisType   string `protobuf:"bytes,8,opt,name=diagnosis_type,json=diagnosisType,proto3" json:"diagnosis_type,omitempty"`
	DiagnosisText   string `protobuf:"bytes,9,opt,name=diagnosis_text,json=diagnosisText,proto3" json:"diagnosis_text,omitempty"`
	ProviderName    string `protobuf:"bytes,10,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider     string `protobuf:"bytes,11,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid            string `protobuf:"bytes,12,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrOPDDiagResponse_Results) Reset() {
	*x = EmrOPDDiagResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDDiagResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDDiagResponse_Results) ProtoMessage() {}

func (x *EmrOPDDiagResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDDiagResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrOPDDiagResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{6, 0}
}

func (x *EmrOPDDiagResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetDiagnosisCode() string {
	if x != nil {
		return x.DiagnosisCode
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetDiagnosisEnName() string {
	if x != nil {
		return x.DiagnosisEnName
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetDiagnosisThName() string {
	if x != nil {
		return x.DiagnosisThName
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetDiagnosisType() string {
	if x != nil {
		return x.DiagnosisType
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetDiagnosisText() string {
	if x != nil {
		return x.DiagnosisText
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrOPDDiagResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrOPDProcedureResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode        string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname        string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn              string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn              string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	DiagnosisCode   string `protobuf:"bytes,5,opt,name=diagnosis_code,json=diagnosisCode,proto3" json:"diagnosis_code,omitempty"`
	DiagnosisThName string `protobuf:"bytes,6,opt,name=diagnosis_th_name,json=diagnosisThName,proto3" json:"diagnosis_th_name,omitempty"`
	DiagnosisEnName string `protobuf:"bytes,14,opt,name=diagnosis_en_name,json=diagnosisEnName,proto3" json:"diagnosis_en_name,omitempty"`
	StartDate       string `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StartTime       string `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishDate      string `protobuf:"bytes,9,opt,name=finish_date,json=finishDate,proto3" json:"finish_date,omitempty"`
	FinishTime      string `protobuf:"bytes,10,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	ProviderName    string `protobuf:"bytes,11,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider     string `protobuf:"bytes,12,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid            string `protobuf:"bytes,13,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrOPDProcedureResponse_Results) Reset() {
	*x = EmrOPDProcedureResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDProcedureResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDProcedureResponse_Results) ProtoMessage() {}

func (x *EmrOPDProcedureResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDProcedureResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrOPDProcedureResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{7, 0}
}

func (x *EmrOPDProcedureResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetDiagnosisCode() string {
	if x != nil {
		return x.DiagnosisCode
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetDiagnosisThName() string {
	if x != nil {
		return x.DiagnosisThName
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetDiagnosisEnName() string {
	if x != nil {
		return x.DiagnosisEnName
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetFinishDate() string {
	if x != nil {
		return x.FinishDate
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrOPDProcedureResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrOPDScreenResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode        string  `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname        string  `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn              string  `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn              string  `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	Bpd             float32 `protobuf:"fixed32,5,opt,name=bpd,proto3" json:"bpd,omitempty"`
	Bps             float32 `protobuf:"fixed32,6,opt,name=bps,proto3" json:"bps,omitempty"`
	Weight          float32 `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Height          float32 `protobuf:"fixed32,8,opt,name=height,proto3" json:"height,omitempty"`
	Waist           float32 `protobuf:"fixed32,9,opt,name=waist,proto3" json:"waist,omitempty"`
	Bmi             float32 `protobuf:"fixed32,10,opt,name=bmi,proto3" json:"bmi,omitempty"`
	ChiefComplain   string  `protobuf:"bytes,11,opt,name=chief_complain,json=chiefComplain,proto3" json:"chief_complain,omitempty"`
	HearthRate      float32 `protobuf:"fixed32,12,opt,name=hearth_rate,json=hearthRate,proto3" json:"hearth_rate,omitempty"`
	Pe              string  `protobuf:"bytes,13,opt,name=pe,proto3" json:"pe,omitempty"`
	PulseRate       int32   `protobuf:"varint,14,opt,name=pulse_rate,json=pulseRate,proto3" json:"pulse_rate,omitempty"`
	Temperature     float32 `protobuf:"fixed32,15,opt,name=temperature,proto3" json:"temperature,omitempty"`
	RespiratoryRate int32   `protobuf:"varint,16,opt,name=respiratory_rate,json=respiratoryRate,proto3" json:"respiratory_rate,omitempty"`
	Hpi             string  `protobuf:"bytes,17,opt,name=hpi,proto3" json:"hpi,omitempty"`
	ProviderName    string  `protobuf:"bytes,18,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider     string  `protobuf:"bytes,19,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid            string  `protobuf:"bytes,20,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrOPDScreenResponse_Results) Reset() {
	*x = EmrOPDScreenResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrOPDScreenResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrOPDScreenResponse_Results) ProtoMessage() {}

func (x *EmrOPDScreenResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrOPDScreenResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrOPDScreenResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{8, 0}
}

func (x *EmrOPDScreenResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetBpd() float32 {
	if x != nil {
		return x.Bpd
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetBps() float32 {
	if x != nil {
		return x.Bps
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetWaist() float32 {
	if x != nil {
		return x.Waist
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetBmi() float32 {
	if x != nil {
		return x.Bmi
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetChiefComplain() string {
	if x != nil {
		return x.ChiefComplain
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetHearthRate() float32 {
	if x != nil {
		return x.HearthRate
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetPe() string {
	if x != nil {
		return x.Pe
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetPulseRate() int32 {
	if x != nil {
		return x.PulseRate
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetRespiratoryRate() int32 {
	if x != nil {
		return x.RespiratoryRate
	}
	return 0
}

func (x *EmrOPDScreenResponse_Results) GetHpi() string {
	if x != nil {
		return x.Hpi
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrOPDScreenResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrServiceListResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode       string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hospname       string `protobuf:"bytes,2,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hn             string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn             string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	VisitDate      string `protobuf:"bytes,5,opt,name=visit_date,json=visitDate,proto3" json:"visit_date,omitempty"`
	VisitTime      string `protobuf:"bytes,6,opt,name=visit_time,json=visitTime,proto3" json:"visit_time,omitempty"`
	MainDepartment string `protobuf:"bytes,7,opt,name=main_department,json=mainDepartment,proto3" json:"main_department,omitempty"`
	SubDepartment  string `protobuf:"bytes,8,opt,name=sub_department,json=subDepartment,proto3" json:"sub_department,omitempty"`
	Pttype         string `protobuf:"bytes,9,opt,name=pttype,proto3" json:"pttype,omitempty"`
	PttypeNo       string `protobuf:"bytes,10,opt,name=pttype_no,json=pttypeNo,proto3" json:"pttype_no,omitempty"`
	An             string `protobuf:"bytes,11,opt,name=an,proto3" json:"an,omitempty"`
	DiagnosisCode  string `protobuf:"bytes,12,opt,name=diagnosis_code,json=diagnosisCode,proto3" json:"diagnosis_code,omitempty"`
	DiagnosisName  string `protobuf:"bytes,13,opt,name=diagnosis_name,json=diagnosisName,proto3" json:"diagnosis_name,omitempty"`
	VisitRefer     string `protobuf:"bytes,14,opt,name=visit_refer,json=visitRefer,proto3" json:"visit_refer,omitempty"`
	ProviderName   string `protobuf:"bytes,15,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider    string `protobuf:"bytes,16,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid           string `protobuf:"bytes,17,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrServiceListResponse_Results) Reset() {
	*x = EmrServiceListResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrServiceListResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrServiceListResponse_Results) ProtoMessage() {}

func (x *EmrServiceListResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrServiceListResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrServiceListResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{9, 0}
}

func (x *EmrServiceListResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetVisitDate() string {
	if x != nil {
		return x.VisitDate
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetVisitTime() string {
	if x != nil {
		return x.VisitTime
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetMainDepartment() string {
	if x != nil {
		return x.MainDepartment
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetSubDepartment() string {
	if x != nil {
		return x.SubDepartment
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetPttype() string {
	if x != nil {
		return x.Pttype
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetPttypeNo() string {
	if x != nil {
		return x.PttypeNo
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetAn() string {
	if x != nil {
		return x.An
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetDiagnosisCode() string {
	if x != nil {
		return x.DiagnosisCode
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetDiagnosisName() string {
	if x != nil {
		return x.DiagnosisName
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetVisitRefer() string {
	if x != nil {
		return x.VisitRefer
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrServiceListResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrAppointmentResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospname        string `protobuf:"bytes,1,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hospcode        string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	VisitDate       string `protobuf:"bytes,3,opt,name=visit_date,json=visitDate,proto3" json:"visit_date,omitempty"`
	Hn              string `protobuf:"bytes,4,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn              string `protobuf:"bytes,5,opt,name=vn,proto3" json:"vn,omitempty"`
	AppointmentDate string `protobuf:"bytes,6,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`
	AppointmentTime string `protobuf:"bytes,7,opt,name=appointment_time,json=appointmentTime,proto3" json:"appointment_time,omitempty"`
	Cause           string `protobuf:"bytes,8,opt,name=cause,proto3" json:"cause,omitempty"`
	ContactPoint    string `protobuf:"bytes,9,opt,name=contact_point,json=contactPoint,proto3" json:"contact_point,omitempty"`
	Note            string `protobuf:"bytes,10,opt,name=note,proto3" json:"note,omitempty"`
	ProviderName    string `protobuf:"bytes,11,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider     string `protobuf:"bytes,12,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid            string `protobuf:"bytes,13,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrAppointmentResponse_Results) Reset() {
	*x = EmrAppointmentResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrAppointmentResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrAppointmentResponse_Results) ProtoMessage() {}

func (x *EmrAppointmentResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrAppointmentResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrAppointmentResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{10, 0}
}

func (x *EmrAppointmentResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetVisitDate() string {
	if x != nil {
		return x.VisitDate
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetContactPoint() string {
	if x != nil {
		return x.ContactPoint
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrAppointmentResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type EmrReferOutResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospname       string `protobuf:"bytes,1,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hospcode       string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Hn             string `protobuf:"bytes,3,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn             string `protobuf:"bytes,4,opt,name=vn,proto3" json:"vn,omitempty"`
	ReferPoint     string `protobuf:"bytes,5,opt,name=refer_point,json=referPoint,proto3" json:"refer_point,omitempty"`
	ReferDate      string `protobuf:"bytes,6,opt,name=refer_date,json=referDate,proto3" json:"refer_date,omitempty"`
	ReferTime      string `protobuf:"bytes,7,opt,name=refer_time,json=referTime,proto3" json:"refer_time,omitempty"`
	Pttype         string `protobuf:"bytes,8,opt,name=pttype,proto3" json:"pttype,omitempty"`
	PttypeNo       string `protobuf:"bytes,9,opt,name=pttype_no,json=pttypeNo,proto3" json:"pttype_no,omitempty"`
	DiagnosisCode  string `protobuf:"bytes,10,opt,name=diagnosis_code,json=diagnosisCode,proto3" json:"diagnosis_code,omitempty"`
	DiagnosisName  string `protobuf:"bytes,11,opt,name=diagnosis_name,json=diagnosisName,proto3" json:"diagnosis_name,omitempty"`
	Treatment      string `protobuf:"bytes,12,opt,name=treatment,proto3" json:"treatment,omitempty"`
	ReferHospcode  string `protobuf:"bytes,13,opt,name=refer_hospcode,json=referHospcode,proto3" json:"refer_hospcode,omitempty"`
	ReferHospname  string `protobuf:"bytes,14,opt,name=refer_hospname,json=referHospname,proto3" json:"refer_hospname,omitempty"`
	MainDepartment string `protobuf:"bytes,15,opt,name=main_department,json=mainDepartment,proto3" json:"main_department,omitempty"`
	SubDepartment  string `protobuf:"bytes,16,opt,name=sub_department,json=subDepartment,proto3" json:"sub_department,omitempty"`
	ReferNumber    string `protobuf:"bytes,17,opt,name=refer_number,json=referNumber,proto3" json:"refer_number,omitempty"`
	ReferType      string `protobuf:"bytes,18,opt,name=refer_type,json=referType,proto3" json:"refer_type,omitempty"`
	ReferCause     string `protobuf:"bytes,19,opt,name=refer_cause,json=referCause,proto3" json:"refer_cause,omitempty"`
	ExpireDate     string `protobuf:"bytes,20,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
	ProviderName   string `protobuf:"bytes,21,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider    string `protobuf:"bytes,22,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid           string `protobuf:"bytes,23,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *EmrReferOutResponse_Results) Reset() {
	*x = EmrReferOutResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_emr_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmrReferOutResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmrReferOutResponse_Results) ProtoMessage() {}

func (x *EmrReferOutResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_emr_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmrReferOutResponse_Results.ProtoReflect.Descriptor instead.
func (*EmrReferOutResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_emr_proto_rawDescGZIP(), []int{11, 0}
}

func (x *EmrReferOutResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferPoint() string {
	if x != nil {
		return x.ReferPoint
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferDate() string {
	if x != nil {
		return x.ReferDate
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferTime() string {
	if x != nil {
		return x.ReferTime
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetPttype() string {
	if x != nil {
		return x.Pttype
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetPttypeNo() string {
	if x != nil {
		return x.PttypeNo
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetDiagnosisCode() string {
	if x != nil {
		return x.DiagnosisCode
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetDiagnosisName() string {
	if x != nil {
		return x.DiagnosisName
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetTreatment() string {
	if x != nil {
		return x.Treatment
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferHospcode() string {
	if x != nil {
		return x.ReferHospcode
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferHospname() string {
	if x != nil {
		return x.ReferHospname
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetMainDepartment() string {
	if x != nil {
		return x.MainDepartment
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetSubDepartment() string {
	if x != nil {
		return x.SubDepartment
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferNumber() string {
	if x != nil {
		return x.ReferNumber
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferType() string {
	if x != nil {
		return x.ReferType
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetReferCause() string {
	if x != nil {
		return x.ReferCause
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *EmrReferOutResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

var File_src_emr_proto protoreflect.FileDescriptor

var file_src_emr_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x72, 0x63, 0x2f, 0x65, 0x6d, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x10, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x0a,
	0x45, 0x6d, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4f, 0x0a, 0x11, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x68,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xe0, 0x03, 0x0a, 0x11, 0x45, 0x6d, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x8e, 0x03, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xcc, 0x03, 0x0a, 0x12, 0x45,
	0x6d, 0x72, 0x4f, 0x50, 0x44, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50,
	0x44, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xf8,
	0x02, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x76, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x75, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x75, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x72, 0x75, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x71, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x32,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x33, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x75, 0x67, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x72, 0x75, 0x67, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xbc, 0x03, 0x0a, 0x11, 0x45, 0x6d,
	0x72, 0x4f, 0x50, 0x44, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x4c,
	0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xea, 0x02, 0x0a, 0x07,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x62, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x62,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xde, 0x03, 0x0a, 0x12, 0x45, 0x6d, 0x72,
	0x4f, 0x50, 0x44, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x44,
	0x69, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x8a, 0x03, 0x0a,
	0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73,
	0x5f, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x54, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x69, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x9a, 0x04, 0x0a, 0x17, 0x45, 0x6d,
	0x72, 0x4f, 0x50, 0x44, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x72, 0x4f, 0x50, 0x44, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xbc, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f,
	0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x54, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x69, 0x73, 0x45, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xe7, 0x04, 0x0a, 0x14, 0x45, 0x6d, 0x72, 0x4f, 0x50,
	0x44, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x8f,
	0x04, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x76, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x70, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x62, 0x70, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x62, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x69, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x61, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x6d, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62, 0x6d, 0x69, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x68, 0x69, 0x65, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x65, 0x66, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x72, 0x74, 0x68, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x75, 0x6c, 0x73,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x69, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x70, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x68, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x22, 0xdb, 0x04, 0x0a, 0x16, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xff, 0x03, 0x0a,
	0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x61, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xdd,
	0x03, 0x0a, 0x16, 0x45, 0x6d, 0x72, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x81, 0x03, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x68, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x76, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xb5,
	0x06, 0x0a, 0x13, 0x45, 0x6d, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6d, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x1a, 0xdf, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x74, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x5f, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x48, 0x6f,
	0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x32, 0xef, 0x04, 0x0a, 0x0a, 0x45, 0x6d, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x4f, 0x50,
	0x44, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72,
	0x4f, 0x50, 0x44, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x4f, 0x50, 0x44, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x44, 0x69, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x4f, 0x50,
	0x44, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72,
	0x4f, 0x50, 0x44, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x4f, 0x50, 0x44, 0x44, 0x72, 0x75,
	0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x4f, 0x50, 0x44, 0x4c,
	0x61, 0x62, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x4f, 0x50, 0x44, 0x4c, 0x61, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6d, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6d, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x65, 0x6d,
	0x72, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_emr_proto_rawDescOnce sync.Once
	file_src_emr_proto_rawDescData = file_src_emr_proto_rawDesc
)

func file_src_emr_proto_rawDescGZIP() []byte {
	file_src_emr_proto_rawDescOnce.Do(func() {
		file_src_emr_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_emr_proto_rawDescData)
	})
	return file_src_emr_proto_rawDescData
}

var file_src_emr_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_src_emr_proto_goTypes = []interface{}{
	(*EmrSearchRequest)(nil),                // 0: proto.EmrSearchRequest
	(*EmrRequest)(nil),                      // 1: proto.EmrRequest
	(*EmrServiceRequest)(nil),               // 2: proto.EmrServiceRequest
	(*EmrSearchResponse)(nil),               // 3: proto.EmrSearchResponse
	(*EmrOPDDrugResponse)(nil),              // 4: proto.EmrOPDDrugResponse
	(*EmrOPDLabResponse)(nil),               // 5: proto.EmrOPDLabResponse
	(*EmrOPDDiagResponse)(nil),              // 6: proto.EmrOPDDiagResponse
	(*EmrOPDProcedureResponse)(nil),         // 7: proto.EmrOPDProcedureResponse
	(*EmrOPDScreenResponse)(nil),            // 8: proto.EmrOPDScreenResponse
	(*EmrServiceListResponse)(nil),          // 9: proto.EmrServiceListResponse
	(*EmrAppointmentResponse)(nil),          // 10: proto.EmrAppointmentResponse
	(*EmrReferOutResponse)(nil),             // 11: proto.EmrReferOutResponse
	(*EmrSearchResponse_Results)(nil),       // 12: proto.EmrSearchResponse.Results
	(*EmrOPDDrugResponse_Results)(nil),      // 13: proto.EmrOPDDrugResponse.Results
	(*EmrOPDLabResponse_Results)(nil),       // 14: proto.EmrOPDLabResponse.Results
	(*EmrOPDDiagResponse_Results)(nil),      // 15: proto.EmrOPDDiagResponse.Results
	(*EmrOPDProcedureResponse_Results)(nil), // 16: proto.EmrOPDProcedureResponse.Results
	(*EmrOPDScreenResponse_Results)(nil),    // 17: proto.EmrOPDScreenResponse.Results
	(*EmrServiceListResponse_Results)(nil),  // 18: proto.EmrServiceListResponse.Results
	(*EmrAppointmentResponse_Results)(nil),  // 19: proto.EmrAppointmentResponse.Results
	(*EmrReferOutResponse_Results)(nil),     // 20: proto.EmrReferOutResponse.Results
}
var file_src_emr_proto_depIdxs = []int32{
	12, // 0: proto.EmrSearchResponse.results:type_name -> proto.EmrSearchResponse.Results
	13, // 1: proto.EmrOPDDrugResponse.results:type_name -> proto.EmrOPDDrugResponse.Results
	14, // 2: proto.EmrOPDLabResponse.results:type_name -> proto.EmrOPDLabResponse.Results
	15, // 3: proto.EmrOPDDiagResponse.results:type_name -> proto.EmrOPDDiagResponse.Results
	16, // 4: proto.EmrOPDProcedureResponse.results:type_name -> proto.EmrOPDProcedureResponse.Results
	17, // 5: proto.EmrOPDScreenResponse.results:type_name -> proto.EmrOPDScreenResponse.Results
	18, // 6: proto.EmrServiceListResponse.results:type_name -> proto.EmrServiceListResponse.Results
	19, // 7: proto.EmrAppointmentResponse.results:type_name -> proto.EmrAppointmentResponse.Results
	20, // 8: proto.EmrReferOutResponse.results:type_name -> proto.EmrReferOutResponse.Results
	0,  // 9: proto.EmrService.Search:input_type -> proto.EmrSearchRequest
	2,  // 10: proto.EmrService.Service:input_type -> proto.EmrServiceRequest
	2,  // 11: proto.EmrService.OPDScreening:input_type -> proto.EmrServiceRequest
	2,  // 12: proto.EmrService.OPDDiagnosis:input_type -> proto.EmrServiceRequest
	2,  // 13: proto.EmrService.OPDProcedure:input_type -> proto.EmrServiceRequest
	2,  // 14: proto.EmrService.OPDDrug:input_type -> proto.EmrServiceRequest
	2,  // 15: proto.EmrService.OPDLab:input_type -> proto.EmrServiceRequest
	1,  // 16: proto.EmrService.Appointment:input_type -> proto.EmrRequest
	1,  // 17: proto.EmrService.ReferOut:input_type -> proto.EmrRequest
	3,  // 18: proto.EmrService.Search:output_type -> proto.EmrSearchResponse
	9,  // 19: proto.EmrService.Service:output_type -> proto.EmrServiceListResponse
	8,  // 20: proto.EmrService.OPDScreening:output_type -> proto.EmrOPDScreenResponse
	6,  // 21: proto.EmrService.OPDDiagnosis:output_type -> proto.EmrOPDDiagResponse
	7,  // 22: proto.EmrService.OPDProcedure:output_type -> proto.EmrOPDProcedureResponse
	4,  // 23: proto.EmrService.OPDDrug:output_type -> proto.EmrOPDDrugResponse
	5,  // 24: proto.EmrService.OPDLab:output_type -> proto.EmrOPDLabResponse
	10, // 25: proto.EmrService.Appointment:output_type -> proto.EmrAppointmentResponse
	11, // 26: proto.EmrService.ReferOut:output_type -> proto.EmrReferOutResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_src_emr_proto_init() }
func file_src_emr_proto_init() {
	if File_src_emr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_emr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDDrugResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDLabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDDiagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDProcedureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDScreenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrAppointmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrReferOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrSearchResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDDrugResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDLabResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDDiagResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDProcedureResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrOPDScreenResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrServiceListResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrAppointmentResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_emr_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmrReferOutResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_emr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_emr_proto_goTypes,
		DependencyIndexes: file_src_emr_proto_depIdxs,
		MessageInfos:      file_src_emr_proto_msgTypes,
	}.Build()
	File_src_emr_proto = out.File
	file_src_emr_proto_rawDesc = nil
	file_src_emr_proto_goTypes = nil
	file_src_emr_proto_depIdxs = nil
}
