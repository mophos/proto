// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: src/h4u.proto

package grpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type DateserveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dateserve string `protobuf:"bytes,1,opt,name=dateserve,proto3" json:"dateserve,omitempty"`
	Hospcode  string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
}

func (x *DateserveRequest) Reset() {
	*x = DateserveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateserveRequest) ProtoMessage() {}

func (x *DateserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateserveRequest.ProtoReflect.Descriptor instead.
func (*DateserveRequest) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{1}
}

func (x *DateserveRequest) GetDateserve() string {
	if x != nil {
		return x.Dateserve
	}
	return ""
}

func (x *DateserveRequest) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

type HospcodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
}

func (x *HospcodeRequest) Reset() {
	*x = HospcodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HospcodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HospcodeRequest) ProtoMessage() {}

func (x *HospcodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HospcodeRequest.ProtoReflect.Descriptor instead.
func (*HospcodeRequest) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{2}
}

func (x *HospcodeRequest) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

type TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenRequest) Reset() {
	*x = TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenRequest) ProtoMessage() {}

func (x *TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenRequest.ProtoReflect.Descriptor instead.
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{3}
}

func (x *TokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospcode  string `protobuf:"bytes,1,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *ProviderRequest) Reset() {
	*x = ProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderRequest) ProtoMessage() {}

func (x *ProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderRequest.ProtoReflect.Descriptor instead.
func (*ProviderRequest) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{4}
}

func (x *ProviderRequest) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *ProviderRequest) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type ListDoctorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListDoctorResponse_Doctor `protobuf:"bytes,2,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *ListDoctorResponse) Reset() {
	*x = ListDoctorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDoctorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorResponse) ProtoMessage() {}

func (x *ListDoctorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorResponse.ProtoReflect.Descriptor instead.
func (*ListDoctorResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{5}
}

func (x *ListDoctorResponse) GetResults() []*ListDoctorResponse_Doctor {
	if x != nil {
		return x.Results
	}
	return nil
}

type HisProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*HisProviderResponse_HisProvider `protobuf:"bytes,2,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *HisProviderResponse) Reset() {
	*x = HisProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HisProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HisProviderResponse) ProtoMessage() {}

func (x *HisProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HisProviderResponse.ProtoReflect.Descriptor instead.
func (*HisProviderResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{6}
}

func (x *HisProviderResponse) GetResults() []*HisProviderResponse_HisProvider {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListClinicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ListClinicResponse_Clinic `protobuf:"bytes,2,rep,name=Results,proto3" json:"Results,omitempty"`
}

func (x *ListClinicResponse) Reset() {
	*x = ListClinicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClinicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClinicResponse) ProtoMessage() {}

func (x *ListClinicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClinicResponse.ProtoReflect.Descriptor instead.
func (*ListClinicResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{7}
}

func (x *ListClinicResponse) GetResults() []*ListClinicResponse_Clinic {
	if x != nil {
		return x.Results
	}
	return nil
}

type TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*TokenResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *TokenResponse) Reset() {
	*x = TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse) ProtoMessage() {}

func (x *TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse.ProtoReflect.Descriptor instead.
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{8}
}

func (x *TokenResponse) GetResults() []*TokenResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type CountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CountResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{9}
}

func (x *CountResponse) GetResults() []*CountResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type H4UPersonalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*H4UPersonalResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *H4UPersonalResponse) Reset() {
	*x = H4UPersonalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UPersonalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UPersonalResponse) ProtoMessage() {}

func (x *H4UPersonalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UPersonalResponse.ProtoReflect.Descriptor instead.
func (*H4UPersonalResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{10}
}

func (x *H4UPersonalResponse) GetResults() []*H4UPersonalResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type H4UVisitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*H4UVisitResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *H4UVisitResponse) Reset() {
	*x = H4UVisitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UVisitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UVisitResponse) ProtoMessage() {}

func (x *H4UVisitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UVisitResponse.ProtoReflect.Descriptor instead.
func (*H4UVisitResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{11}
}

func (x *H4UVisitResponse) GetResults() []*H4UVisitResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type H4ULabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*H4ULabResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *H4ULabResponse) Reset() {
	*x = H4ULabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4ULabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4ULabResponse) ProtoMessage() {}

func (x *H4ULabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4ULabResponse.ProtoReflect.Descriptor instead.
func (*H4ULabResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{12}
}

func (x *H4ULabResponse) GetResults() []*H4ULabResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type H4UOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*H4UOrderResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *H4UOrderResponse) Reset() {
	*x = H4UOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UOrderResponse) ProtoMessage() {}

func (x *H4UOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UOrderResponse.ProtoReflect.Descriptor instead.
func (*H4UOrderResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{13}
}

func (x *H4UOrderResponse) GetResults() []*H4UOrderResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type H4UDiagnosisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*H4UDiagnosisResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *H4UDiagnosisResponse) Reset() {
	*x = H4UDiagnosisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UDiagnosisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UDiagnosisResponse) ProtoMessage() {}

func (x *H4UDiagnosisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UDiagnosisResponse.ProtoReflect.Descriptor instead.
func (*H4UDiagnosisResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{14}
}

func (x *H4UDiagnosisResponse) GetResults() []*H4UDiagnosisResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type AppointmentDateserveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AppointmentDateserveResponse_Results `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *AppointmentDateserveResponse) Reset() {
	*x = AppointmentDateserveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentDateserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentDateserveResponse) ProtoMessage() {}

func (x *AppointmentDateserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentDateserveResponse.ProtoReflect.Descriptor instead.
func (*AppointmentDateserveResponse) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{15}
}

func (x *AppointmentDateserveResponse) GetResults() []*AppointmentDateserveResponse_Results {
	if x != nil {
		return x.Results
	}
	return nil
}

type ListDoctorResponse_Doctor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid      string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Hospcode  string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LicenseNo string `protobuf:"bytes,4,opt,name=license_no,json=licenseNo,proto3" json:"license_no,omitempty"`
	Cid       string `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`
	Code      string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ListDoctorResponse_Doctor) Reset() {
	*x = ListDoctorResponse_Doctor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDoctorResponse_Doctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorResponse_Doctor) ProtoMessage() {}

func (x *ListDoctorResponse_Doctor) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorResponse_Doctor.ProtoReflect.Descriptor instead.
func (*ListDoctorResponse_Doctor) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListDoctorResponse_Doctor) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ListDoctorResponse_Doctor) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *ListDoctorResponse_Doctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDoctorResponse_Doctor) GetLicenseNo() string {
	if x != nil {
		return x.LicenseNo
	}
	return ""
}

func (x *ListDoctorResponse_Doctor) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ListDoctorResponse_Doctor) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type HisProviderResponse_HisProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderName string `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	Hospcode     string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
}

func (x *HisProviderResponse_HisProvider) Reset() {
	*x = HisProviderResponse_HisProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HisProviderResponse_HisProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HisProviderResponse_HisProvider) ProtoMessage() {}

func (x *HisProviderResponse_HisProvider) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HisProviderResponse_HisProvider.ProtoReflect.Descriptor instead.
func (*HisProviderResponse_HisProvider) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HisProviderResponse_HisProvider) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *HisProviderResponse_HisProvider) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

type ListClinicResponse_Clinic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid       string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Hospcode   string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	ClinicCode string `protobuf:"bytes,3,opt,name=clinic_code,json=clinicCode,proto3" json:"clinic_code,omitempty"`
	ClinicName string `protobuf:"bytes,4,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
}

func (x *ListClinicResponse_Clinic) Reset() {
	*x = ListClinicResponse_Clinic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClinicResponse_Clinic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClinicResponse_Clinic) ProtoMessage() {}

func (x *ListClinicResponse_Clinic) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClinicResponse_Clinic.ProtoReflect.Descriptor instead.
func (*ListClinicResponse_Clinic) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListClinicResponse_Clinic) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ListClinicResponse_Clinic) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *ListClinicResponse_Clinic) GetClinicCode() string {
	if x != nil {
		return x.ClinicCode
	}
	return ""
}

func (x *ListClinicResponse_Clinic) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

type TokenResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	IsActived   string `protobuf:"bytes,2,opt,name=is_actived,json=isActived,proto3" json:"is_actived,omitempty"`
	ExpiredDate string `protobuf:"bytes,3,opt,name=expired_date,json=expiredDate,proto3" json:"expired_date,omitempty"`
}

func (x *TokenResponse_Results) Reset() {
	*x = TokenResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenResponse_Results) ProtoMessage() {}

func (x *TokenResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenResponse_Results.ProtoReflect.Descriptor instead.
func (*TokenResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TokenResponse_Results) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *TokenResponse_Results) GetIsActived() string {
	if x != nil {
		return x.IsActived
	}
	return ""
}

func (x *TokenResponse_Results) GetExpiredDate() string {
	if x != nil {
		return x.ExpiredDate
	}
	return ""
}

type CountResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    string `protobuf:"bytes,1,opt,name=count,proto3" json:"count,omitempty"`
	Hospcode string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	Table    string `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *CountResponse_Results) Reset() {
	*x = CountResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse_Results) ProtoMessage() {}

func (x *CountResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse_Results.ProtoReflect.Descriptor instead.
func (*CountResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CountResponse_Results) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *CountResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *CountResponse_Results) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type H4UPersonalResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid          string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Hn           string `protobuf:"bytes,2,opt,name=hn,proto3" json:"hn,omitempty"`
	Pname        string `protobuf:"bytes,3,opt,name=pname,proto3" json:"pname,omitempty"`
	Fname        string `protobuf:"bytes,4,opt,name=fname,proto3" json:"fname,omitempty"`
	Lname        string `protobuf:"bytes,5,opt,name=lname,proto3" json:"lname,omitempty"`
	Birthday     string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Addressid    string `protobuf:"bytes,7,opt,name=addressid,proto3" json:"addressid,omitempty"`
	Addrpart     string `protobuf:"bytes,8,opt,name=addrpart,proto3" json:"addrpart,omitempty"`
	Moopart      string `protobuf:"bytes,9,opt,name=moopart,proto3" json:"moopart,omitempty"`
	Tmbpart      string `protobuf:"bytes,10,opt,name=tmbpart,proto3" json:"tmbpart,omitempty"`
	Amppart      string `protobuf:"bytes,11,opt,name=amppart,proto3" json:"amppart,omitempty"`
	Chwpart      string `protobuf:"bytes,12,opt,name=chwpart,proto3" json:"chwpart,omitempty"`
	FullName     string `protobuf:"bytes,13,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Drugallergy  string `protobuf:"bytes,14,opt,name=drugallergy,proto3" json:"drugallergy,omitempty"`
	AgeY         string `protobuf:"bytes,15,opt,name=age_y,json=ageY,proto3" json:"age_y,omitempty"`
	Bloodgrp     string `protobuf:"bytes,16,opt,name=bloodgrp,proto3" json:"bloodgrp,omitempty"`
	Hometel      string `protobuf:"bytes,17,opt,name=hometel,proto3" json:"hometel,omitempty"`
	Nationality  string `protobuf:"bytes,18,opt,name=nationality,proto3" json:"nationality,omitempty"`
	Road         string `protobuf:"bytes,19,opt,name=road,proto3" json:"road,omitempty"`
	PoCode       string `protobuf:"bytes,20,opt,name=po_code,json=poCode,proto3" json:"po_code,omitempty"`
	AddrSoi      string `protobuf:"bytes,21,opt,name=addr_soi,json=addrSoi,proto3" json:"addr_soi,omitempty"`
	ProviderName string `protobuf:"bytes,22,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider  string `protobuf:"bytes,23,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
}

func (x *H4UPersonalResponse_Results) Reset() {
	*x = H4UPersonalResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UPersonalResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UPersonalResponse_Results) ProtoMessage() {}

func (x *H4UPersonalResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UPersonalResponse_Results.ProtoReflect.Descriptor instead.
func (*H4UPersonalResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{10, 0}
}

func (x *H4UPersonalResponse_Results) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetFname() string {
	if x != nil {
		return x.Fname
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetLname() string {
	if x != nil {
		return x.Lname
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetAddressid() string {
	if x != nil {
		return x.Addressid
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetAddrpart() string {
	if x != nil {
		return x.Addrpart
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetMoopart() string {
	if x != nil {
		return x.Moopart
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetTmbpart() string {
	if x != nil {
		return x.Tmbpart
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetAmppart() string {
	if x != nil {
		return x.Amppart
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetChwpart() string {
	if x != nil {
		return x.Chwpart
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetDrugallergy() string {
	if x != nil {
		return x.Drugallergy
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetAgeY() string {
	if x != nil {
		return x.AgeY
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetBloodgrp() string {
	if x != nil {
		return x.Bloodgrp
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetHometel() string {
	if x != nil {
		return x.Hometel
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetRoad() string {
	if x != nil {
		return x.Road
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetPoCode() string {
	if x != nil {
		return x.PoCode
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetAddrSoi() string {
	if x != nil {
		return x.AddrSoi
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *H4UPersonalResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

type H4UVisitResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vstdate      string `protobuf:"bytes,1,opt,name=vstdate,proto3" json:"vstdate,omitempty"`
	Vsttime      string `protobuf:"bytes,2,opt,name=vsttime,proto3" json:"vsttime,omitempty"`
	Bmi          string `protobuf:"bytes,3,opt,name=bmi,proto3" json:"bmi,omitempty"`
	Bw           string `protobuf:"bytes,4,opt,name=bw,proto3" json:"bw,omitempty"`
	O2Sat        string `protobuf:"bytes,5,opt,name=o2sat,proto3" json:"o2sat,omitempty"`
	Temperature  string `protobuf:"bytes,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Rr           string `protobuf:"bytes,7,opt,name=rr,proto3" json:"rr,omitempty"`
	Cc           string `protobuf:"bytes,8,opt,name=cc,proto3" json:"cc,omitempty"`
	Pe           string `protobuf:"bytes,9,opt,name=pe,proto3" json:"pe,omitempty"`
	Height       string `protobuf:"bytes,10,opt,name=height,proto3" json:"height,omitempty"`
	Bps          string `protobuf:"bytes,11,opt,name=bps,proto3" json:"bps,omitempty"`
	Bpd          string `protobuf:"bytes,12,opt,name=bpd,proto3" json:"bpd,omitempty"`
	Hpi          string `protobuf:"bytes,13,opt,name=hpi,proto3" json:"hpi,omitempty"`
	Pulse        string `protobuf:"bytes,14,opt,name=pulse,proto3" json:"pulse,omitempty"`
	ProviderName string `protobuf:"bytes,15,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider  string `protobuf:"bytes,16,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
}

func (x *H4UVisitResponse_Results) Reset() {
	*x = H4UVisitResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UVisitResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UVisitResponse_Results) ProtoMessage() {}

func (x *H4UVisitResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UVisitResponse_Results.ProtoReflect.Descriptor instead.
func (*H4UVisitResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{11, 0}
}

func (x *H4UVisitResponse_Results) GetVstdate() string {
	if x != nil {
		return x.Vstdate
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetVsttime() string {
	if x != nil {
		return x.Vsttime
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetBmi() string {
	if x != nil {
		return x.Bmi
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetBw() string {
	if x != nil {
		return x.Bw
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetO2Sat() string {
	if x != nil {
		return x.O2Sat
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetTemperature() string {
	if x != nil {
		return x.Temperature
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetRr() string {
	if x != nil {
		return x.Rr
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetPe() string {
	if x != nil {
		return x.Pe
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetBps() string {
	if x != nil {
		return x.Bps
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetBpd() string {
	if x != nil {
		return x.Bpd
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetHpi() string {
	if x != nil {
		return x.Hpi
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetPulse() string {
	if x != nil {
		return x.Pulse
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *H4UVisitResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

type H4ULabResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lab                    string `protobuf:"bytes,1,opt,name=lab,proto3" json:"lab,omitempty"`
	Name                   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	OrderDate              string `protobuf:"bytes,3,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	OrderTime              string `protobuf:"bytes,4,opt,name=order_time,json=orderTime,proto3" json:"order_time,omitempty"`
	LabOrderNumber         string `protobuf:"bytes,5,opt,name=lab_order_number,json=labOrderNumber,proto3" json:"lab_order_number,omitempty"`
	Vn                     string `protobuf:"bytes,6,opt,name=vn,proto3" json:"vn,omitempty"`
	Hn                     string `protobuf:"bytes,7,opt,name=hn,proto3" json:"hn,omitempty"`
	LabItemsNameRef        string `protobuf:"bytes,8,opt,name=lab_items_name_ref,json=labItemsNameRef,proto3" json:"lab_items_name_ref,omitempty"`
	LabItemsCode           string `protobuf:"bytes,9,opt,name=lab_items_code,json=labItemsCode,proto3" json:"lab_items_code,omitempty"`
	LabOrderResult         string `protobuf:"bytes,10,opt,name=lab_order_result,json=labOrderResult,proto3" json:"lab_order_result,omitempty"`
	LabItemsNormalValueRef string `protobuf:"bytes,11,opt,name=lab_items_normal_value_ref,json=labItemsNormalValueRef,proto3" json:"lab_items_normal_value_ref,omitempty"`
	LabItemsName           string `protobuf:"bytes,12,opt,name=lab_items_name,json=labItemsName,proto3" json:"lab_items_name,omitempty"`
	ComfirmReport          string `protobuf:"bytes,13,opt,name=comfirm_report,json=comfirmReport,proto3" json:"comfirm_report,omitempty"`
	ProviderName           string `protobuf:"bytes,14,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider            string `protobuf:"bytes,15,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
}

func (x *H4ULabResponse_Results) Reset() {
	*x = H4ULabResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4ULabResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4ULabResponse_Results) ProtoMessage() {}

func (x *H4ULabResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4ULabResponse_Results.ProtoReflect.Descriptor instead.
func (*H4ULabResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{12, 0}
}

func (x *H4ULabResponse_Results) GetLab() string {
	if x != nil {
		return x.Lab
	}
	return ""
}

func (x *H4ULabResponse_Results) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *H4ULabResponse_Results) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *H4ULabResponse_Results) GetOrderTime() string {
	if x != nil {
		return x.OrderTime
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabOrderNumber() string {
	if x != nil {
		return x.LabOrderNumber
	}
	return ""
}

func (x *H4ULabResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *H4ULabResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabItemsNameRef() string {
	if x != nil {
		return x.LabItemsNameRef
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabItemsCode() string {
	if x != nil {
		return x.LabItemsCode
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabOrderResult() string {
	if x != nil {
		return x.LabOrderResult
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabItemsNormalValueRef() string {
	if x != nil {
		return x.LabItemsNormalValueRef
	}
	return ""
}

func (x *H4ULabResponse_Results) GetLabItemsName() string {
	if x != nil {
		return x.LabItemsName
	}
	return ""
}

func (x *H4ULabResponse_Results) GetComfirmReport() string {
	if x != nil {
		return x.ComfirmReport
	}
	return ""
}

func (x *H4ULabResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *H4ULabResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

type H4UOrderResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drug         string `protobuf:"bytes,1,opt,name=drug,proto3" json:"drug,omitempty"`
	Vstdate      string `protobuf:"bytes,2,opt,name=vstdate,proto3" json:"vstdate,omitempty"`
	Vsttime      string `protobuf:"bytes,3,opt,name=vsttime,proto3" json:"vsttime,omitempty"`
	ProviderName string `protobuf:"bytes,4,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider  string `protobuf:"bytes,5,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
}

func (x *H4UOrderResponse_Results) Reset() {
	*x = H4UOrderResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UOrderResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UOrderResponse_Results) ProtoMessage() {}

func (x *H4UOrderResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UOrderResponse_Results.ProtoReflect.Descriptor instead.
func (*H4UOrderResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{13, 0}
}

func (x *H4UOrderResponse_Results) GetDrug() string {
	if x != nil {
		return x.Drug
	}
	return ""
}

func (x *H4UOrderResponse_Results) GetVstdate() string {
	if x != nil {
		return x.Vstdate
	}
	return ""
}

func (x *H4UOrderResponse_Results) GetVsttime() string {
	if x != nil {
		return x.Vsttime
	}
	return ""
}

func (x *H4UOrderResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *H4UOrderResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

type H4UDiagnosisResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diag         string `protobuf:"bytes,1,opt,name=diag,proto3" json:"diag,omitempty"`
	Vstdate      string `protobuf:"bytes,2,opt,name=vstdate,proto3" json:"vstdate,omitempty"`
	Vsttime      string `protobuf:"bytes,3,opt,name=vsttime,proto3" json:"vsttime,omitempty"`
	ProviderName string `protobuf:"bytes,4,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider  string `protobuf:"bytes,5,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
}

func (x *H4UDiagnosisResponse_Results) Reset() {
	*x = H4UDiagnosisResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H4UDiagnosisResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H4UDiagnosisResponse_Results) ProtoMessage() {}

func (x *H4UDiagnosisResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H4UDiagnosisResponse_Results.ProtoReflect.Descriptor instead.
func (*H4UDiagnosisResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{14, 0}
}

func (x *H4UDiagnosisResponse_Results) GetDiag() string {
	if x != nil {
		return x.Diag
	}
	return ""
}

func (x *H4UDiagnosisResponse_Results) GetVstdate() string {
	if x != nil {
		return x.Vstdate
	}
	return ""
}

func (x *H4UDiagnosisResponse_Results) GetVsttime() string {
	if x != nil {
		return x.Vsttime
	}
	return ""
}

func (x *H4UDiagnosisResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *H4UDiagnosisResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

type AppointmentDateserveResponse_Results struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hospname        string `protobuf:"bytes,1,opt,name=hospname,proto3" json:"hospname,omitempty"`
	Hospcode        string `protobuf:"bytes,2,opt,name=hospcode,proto3" json:"hospcode,omitempty"`
	VisitDate       string `protobuf:"bytes,3,opt,name=visit_date,json=visitDate,proto3" json:"visit_date,omitempty"`
	Hn              string `protobuf:"bytes,4,opt,name=hn,proto3" json:"hn,omitempty"`
	Vn              string `protobuf:"bytes,5,opt,name=vn,proto3" json:"vn,omitempty"`
	AppointmentDate string `protobuf:"bytes,6,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`
	AppointmentTime string `protobuf:"bytes,7,opt,name=appointment_time,json=appointmentTime,proto3" json:"appointment_time,omitempty"`
	Cause           string `protobuf:"bytes,8,opt,name=cause,proto3" json:"cause,omitempty"`
	ContactPoint    string `protobuf:"bytes,9,opt,name=contact_point,json=contactPoint,proto3" json:"contact_point,omitempty"`
	Note            string `protobuf:"bytes,10,opt,name=note,proto3" json:"note,omitempty"`
	TitleName       string `protobuf:"bytes,11,opt,name=title_name,json=titleName,proto3" json:"title_name,omitempty"`
	FirstName       string `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName        string `protobuf:"bytes,13,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Cid             string `protobuf:"bytes,14,opt,name=cid,proto3" json:"cid,omitempty"`
	Doctor          string `protobuf:"bytes,15,opt,name=doctor,proto3" json:"doctor,omitempty"`
	ClinicCode      string `protobuf:"bytes,16,opt,name=clinic_code,json=clinicCode,proto3" json:"clinic_code,omitempty"`
	ClinicName      string `protobuf:"bytes,17,opt,name=clinic_name,json=clinicName,proto3" json:"clinic_name,omitempty"`
	DepartmentCode  string `protobuf:"bytes,18,opt,name=department_code,json=departmentCode,proto3" json:"department_code,omitempty"`
	DepartmentName  string `protobuf:"bytes,19,opt,name=department_name,json=departmentName,proto3" json:"department_name,omitempty"`
	Telephone       string `protobuf:"bytes,20,opt,name=telephone,proto3" json:"telephone,omitempty"`
	ProviderName    string `protobuf:"bytes,21,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	HisProvider     string `protobuf:"bytes,22,opt,name=his_provider,json=hisProvider,proto3" json:"his_provider,omitempty"`
	Txid            string `protobuf:"bytes,23,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *AppointmentDateserveResponse_Results) Reset() {
	*x = AppointmentDateserveResponse_Results{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_h4u_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentDateserveResponse_Results) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentDateserveResponse_Results) ProtoMessage() {}

func (x *AppointmentDateserveResponse_Results) ProtoReflect() protoreflect.Message {
	mi := &file_src_h4u_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentDateserveResponse_Results.ProtoReflect.Descriptor instead.
func (*AppointmentDateserveResponse_Results) Descriptor() ([]byte, []int) {
	return file_src_h4u_proto_rawDescGZIP(), []int{15, 0}
}

func (x *AppointmentDateserveResponse_Results) GetHospname() string {
	if x != nil {
		return x.Hospname
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetHospcode() string {
	if x != nil {
		return x.Hospcode
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetVisitDate() string {
	if x != nil {
		return x.VisitDate
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetHn() string {
	if x != nil {
		return x.Hn
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetVn() string {
	if x != nil {
		return x.Vn
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetAppointmentDate() string {
	if x != nil {
		return x.AppointmentDate
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetAppointmentTime() string {
	if x != nil {
		return x.AppointmentTime
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetCause() string {
	if x != nil {
		return x.Cause
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetContactPoint() string {
	if x != nil {
		return x.ContactPoint
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetDoctor() string {
	if x != nil {
		return x.Doctor
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetClinicCode() string {
	if x != nil {
		return x.ClinicCode
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetClinicName() string {
	if x != nil {
		return x.ClinicName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetDepartmentCode() string {
	if x != nil {
		return x.DepartmentCode
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetTelephone() string {
	if x != nil {
		return x.Telephone
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetHisProvider() string {
	if x != nil {
		return x.HisProvider
	}
	return ""
}

func (x *AppointmentDateserveResponse_Results) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

var File_src_h4u_proto protoreflect.FileDescriptor

var file_src_h4u_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x72, 0x63, 0x2f, 0x68, 0x34, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x22, 0x4c, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2d, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x24, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4c, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x48, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x1a, 0x4e, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x52, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x1a, 0x7a, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xaa, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x62, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x99, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x51, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xbc, 0x05, 0x0a, 0x13, 0x48, 0x34,
	0x55, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xe7,
	0x04, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x68, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x70, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x70, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x6f, 0x70, 0x61, 0x72, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x6f, 0x70, 0x61, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x6d, 0x62, 0x70, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6d, 0x62, 0x70, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x70, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x70, 0x70, 0x61,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x77, 0x70, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x77, 0x70, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x72, 0x75,
	0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x72, 0x75, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x67, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x5f, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x67, 0x65, 0x59,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x67, 0x72, 0x70, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x6f, 0x64, 0x67, 0x72, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x6f, 0x6d, 0x65, 0x74, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x61, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x61, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x73, 0x6f,
	0x69, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x53, 0x6f, 0x69,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xc2, 0x03, 0x0a, 0x10, 0x48, 0x34, 0x55,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xf3, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x6d, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x6d, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x32, 0x73,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x32, 0x73, 0x61, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x70, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62,
	0x70, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x70, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x68, 0x70, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x70, 0x69, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xd0, 0x04,
	0x0a, 0x0e, 0x48, 0x34, 0x55, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x4c, 0x61, 0x62, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x85, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x76, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x68, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x62, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6c, 0x61, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3a, 0x0a, 0x1a, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x6c,
	0x61, 0x62, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x66, 0x69,
	0x72, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0xe8, 0x01, 0x0a, 0x10, 0x48, 0x34, 0x55, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34,
	0x55, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a,
	0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x72, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x72, 0x75, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x73, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x74, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xf0, 0x01, 0x0a, 0x14,
	0x48, 0x34, 0x55, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x69, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69,
	0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x73, 0x74, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x73, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x9f,
	0x06, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xb8, 0x05, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x69, 0x73,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x32, 0x66, 0x0a, 0x0e, 0x4d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x95, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x48, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x43,
	0x6c, 0x69, 0x6e, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x48, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x6e,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f,
	0x48, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x6f, 0x73, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x32, 0x44, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x12, 0x12, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x95, 0x02, 0x0a, 0x0a, 0x48, 0x34, 0x55, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x48, 0x34, 0x55, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x48, 0x34, 0x55, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x48, 0x34, 0x55, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x48, 0x34, 0x55, 0x4c, 0x61, 0x62, 0x12, 0x0d, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x48, 0x34, 0x55, 0x4c, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x08, 0x48, 0x34, 0x55, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x48, 0x34, 0x55, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x12, 0x0d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x48, 0x34, 0x55, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x68, 0x34, 0x75, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_h4u_proto_rawDescOnce sync.Once
	file_src_h4u_proto_rawDescData = file_src_h4u_proto_rawDesc
)

func file_src_h4u_proto_rawDescGZIP() []byte {
	file_src_h4u_proto_rawDescOnce.Do(func() {
		file_src_h4u_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_h4u_proto_rawDescData)
	})
	return file_src_h4u_proto_rawDescData
}

var file_src_h4u_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_src_h4u_proto_goTypes = []interface{}{
	(*Request)(nil),                              // 0: grpc.Request
	(*DateserveRequest)(nil),                     // 1: grpc.DateserveRequest
	(*HospcodeRequest)(nil),                      // 2: grpc.HospcodeRequest
	(*TokenRequest)(nil),                         // 3: grpc.TokenRequest
	(*ProviderRequest)(nil),                      // 4: grpc.ProviderRequest
	(*ListDoctorResponse)(nil),                   // 5: grpc.ListDoctorResponse
	(*HisProviderResponse)(nil),                  // 6: grpc.HisProviderResponse
	(*ListClinicResponse)(nil),                   // 7: grpc.ListClinicResponse
	(*TokenResponse)(nil),                        // 8: grpc.TokenResponse
	(*CountResponse)(nil),                        // 9: grpc.CountResponse
	(*H4UPersonalResponse)(nil),                  // 10: grpc.H4UPersonalResponse
	(*H4UVisitResponse)(nil),                     // 11: grpc.H4UVisitResponse
	(*H4ULabResponse)(nil),                       // 12: grpc.H4ULabResponse
	(*H4UOrderResponse)(nil),                     // 13: grpc.H4UOrderResponse
	(*H4UDiagnosisResponse)(nil),                 // 14: grpc.H4UDiagnosisResponse
	(*AppointmentDateserveResponse)(nil),         // 15: grpc.AppointmentDateserveResponse
	(*ListDoctorResponse_Doctor)(nil),            // 16: grpc.ListDoctorResponse.Doctor
	(*HisProviderResponse_HisProvider)(nil),      // 17: grpc.HisProviderResponse.HisProvider
	(*ListClinicResponse_Clinic)(nil),            // 18: grpc.ListClinicResponse.Clinic
	(*TokenResponse_Results)(nil),                // 19: grpc.TokenResponse.Results
	(*CountResponse_Results)(nil),                // 20: grpc.CountResponse.Results
	(*H4UPersonalResponse_Results)(nil),          // 21: grpc.H4UPersonalResponse.Results
	(*H4UVisitResponse_Results)(nil),             // 22: grpc.H4UVisitResponse.Results
	(*H4ULabResponse_Results)(nil),               // 23: grpc.H4ULabResponse.Results
	(*H4UOrderResponse_Results)(nil),             // 24: grpc.H4UOrderResponse.Results
	(*H4UDiagnosisResponse_Results)(nil),         // 25: grpc.H4UDiagnosisResponse.Results
	(*AppointmentDateserveResponse_Results)(nil), // 26: grpc.AppointmentDateserveResponse.Results
}
var file_src_h4u_proto_depIdxs = []int32{
	16, // 0: grpc.ListDoctorResponse.Results:type_name -> grpc.ListDoctorResponse.Doctor
	17, // 1: grpc.HisProviderResponse.Results:type_name -> grpc.HisProviderResponse.HisProvider
	18, // 2: grpc.ListClinicResponse.Results:type_name -> grpc.ListClinicResponse.Clinic
	19, // 3: grpc.TokenResponse.results:type_name -> grpc.TokenResponse.Results
	20, // 4: grpc.CountResponse.results:type_name -> grpc.CountResponse.Results
	21, // 5: grpc.H4UPersonalResponse.results:type_name -> grpc.H4UPersonalResponse.Results
	22, // 6: grpc.H4UVisitResponse.results:type_name -> grpc.H4UVisitResponse.Results
	23, // 7: grpc.H4ULabResponse.results:type_name -> grpc.H4ULabResponse.Results
	24, // 8: grpc.H4UOrderResponse.results:type_name -> grpc.H4UOrderResponse.Results
	25, // 9: grpc.H4UDiagnosisResponse.results:type_name -> grpc.H4UDiagnosisResponse.Results
	26, // 10: grpc.AppointmentDateserveResponse.results:type_name -> grpc.AppointmentDateserveResponse.Results
	1,  // 11: grpc.MhealthService.AppointmentDateserve:input_type -> grpc.DateserveRequest
	2,  // 12: grpc.MasterService.DoctorList:input_type -> grpc.HospcodeRequest
	2,  // 13: grpc.MasterService.ClinicList:input_type -> grpc.HospcodeRequest
	2,  // 14: grpc.MasterService.HisProviderList:input_type -> grpc.HospcodeRequest
	4,  // 15: grpc.MasterService.CountRecord:input_type -> grpc.ProviderRequest
	3,  // 16: grpc.AuthenService.Authen:input_type -> grpc.TokenRequest
	0,  // 17: grpc.H4UService.H4UPersonal:input_type -> grpc.Request
	0,  // 18: grpc.H4UService.H4UVisit:input_type -> grpc.Request
	0,  // 19: grpc.H4UService.H4ULab:input_type -> grpc.Request
	0,  // 20: grpc.H4UService.H4UOrder:input_type -> grpc.Request
	0,  // 21: grpc.H4UService.H4UDiagnosis:input_type -> grpc.Request
	15, // 22: grpc.MhealthService.AppointmentDateserve:output_type -> grpc.AppointmentDateserveResponse
	5,  // 23: grpc.MasterService.DoctorList:output_type -> grpc.ListDoctorResponse
	7,  // 24: grpc.MasterService.ClinicList:output_type -> grpc.ListClinicResponse
	6,  // 25: grpc.MasterService.HisProviderList:output_type -> grpc.HisProviderResponse
	9,  // 26: grpc.MasterService.CountRecord:output_type -> grpc.CountResponse
	8,  // 27: grpc.AuthenService.Authen:output_type -> grpc.TokenResponse
	10, // 28: grpc.H4UService.H4UPersonal:output_type -> grpc.H4UPersonalResponse
	11, // 29: grpc.H4UService.H4UVisit:output_type -> grpc.H4UVisitResponse
	12, // 30: grpc.H4UService.H4ULab:output_type -> grpc.H4ULabResponse
	13, // 31: grpc.H4UService.H4UOrder:output_type -> grpc.H4UOrderResponse
	14, // 32: grpc.H4UService.H4UDiagnosis:output_type -> grpc.H4UDiagnosisResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_src_h4u_proto_init() }
func file_src_h4u_proto_init() {
	if File_src_h4u_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_h4u_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateserveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HospcodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDoctorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HisProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClinicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UPersonalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UVisitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4ULabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UDiagnosisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentDateserveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDoctorResponse_Doctor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HisProviderResponse_HisProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClinicResponse_Clinic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UPersonalResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UVisitResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4ULabResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UOrderResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H4UDiagnosisResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_h4u_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentDateserveResponse_Results); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_h4u_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_src_h4u_proto_goTypes,
		DependencyIndexes: file_src_h4u_proto_depIdxs,
		MessageInfos:      file_src_h4u_proto_msgTypes,
	}.Build()
	File_src_h4u_proto = out.File
	file_src_h4u_proto_rawDesc = nil
	file_src_h4u_proto_goTypes = nil
	file_src_h4u_proto_depIdxs = nil
}
